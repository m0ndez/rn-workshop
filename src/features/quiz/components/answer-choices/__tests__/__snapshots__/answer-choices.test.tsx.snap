// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AnswerChoices component renders correctly 1`] = `
<View>
  <View
    accessibilityRole="radiogroup"
  >
    <RCTScrollView
      data={
        [
          "Choice 1",
          "Choice 2",
          "Choice 3",
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEnabled={false}
      scrollEventThrottle={0.0001}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="Choice 1"
            accessibilityRole="radio"
            accessibilityState={
              {
                "busy": undefined,
                "checked": false,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                false,
                undefined,
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingHorizontal": 16,
                    "paddingVertical": 8,
                  },
                  undefined,
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "System",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "letterSpacing": 0.25,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "flexGrow": 1,
                          "flexShrink": 1,
                        },
                        false,
                        {
                          "color": "rgba(28, 27, 31, 1)",
                          "textAlign": "left",
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
              >
                Choice 1
              </Text>
              <View
                accessibilityLiveRegion="polite"
                accessibilityRole="radio"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": false,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    {
                      "borderRadius": 18,
                    },
                  ]
                }
              >
                <View
                  collapsable={false}
                  style={
                    {
                      "borderColor": "rgba(73, 69, 79, 1)",
                      "borderRadius": 10,
                      "borderWidth": 2,
                      "height": 20,
                      "margin": 8,
                      "width": 20,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="Choice 2"
            accessibilityRole="radio"
            accessibilityState={
              {
                "busy": undefined,
                "checked": false,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                false,
                undefined,
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingHorizontal": 16,
                    "paddingVertical": 8,
                  },
                  undefined,
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "System",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "letterSpacing": 0.25,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "flexGrow": 1,
                          "flexShrink": 1,
                        },
                        false,
                        {
                          "color": "rgba(28, 27, 31, 1)",
                          "textAlign": "left",
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
              >
                Choice 2
              </Text>
              <View
                accessibilityLiveRegion="polite"
                accessibilityRole="radio"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": false,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    {
                      "borderRadius": 18,
                    },
                  ]
                }
              >
                <View
                  collapsable={false}
                  style={
                    {
                      "borderColor": "rgba(73, 69, 79, 1)",
                      "borderRadius": 10,
                      "borderWidth": 2,
                      "height": 20,
                      "margin": 8,
                      "width": 20,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="Choice 3"
            accessibilityRole="radio"
            accessibilityState={
              {
                "busy": undefined,
                "checked": false,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                false,
                undefined,
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingHorizontal": 16,
                    "paddingVertical": 8,
                  },
                  undefined,
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "System",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "letterSpacing": 0.25,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "flexGrow": 1,
                          "flexShrink": 1,
                        },
                        false,
                        {
                          "color": "rgba(28, 27, 31, 1)",
                          "textAlign": "left",
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
              >
                Choice 3
              </Text>
              <View
                accessibilityLiveRegion="polite"
                accessibilityRole="radio"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": false,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    {
                      "borderRadius": 18,
                    },
                  ]
                }
              >
                <View
                  collapsable={false}
                  style={
                    {
                      "borderColor": "rgba(73, 69, 79, 1)",
                      "borderRadius": 10,
                      "borderWidth": 2,
                      "height": 20,
                      "margin": 8,
                      "width": 20,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
